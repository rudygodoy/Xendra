package org.compiere.model.function;


import org.xendra.annotations.*;
import org.apache.commons.lang.text.StrBuilder;
public class Loadmaterial0 
{
 
@XendraFunction(Name="loadmaterial",Output="void",Owner="xendra",Language="plpgsql",
Identifier="d7a361e7-84fd-c3eb-8bec-cd9aacf0cf52",
Arguments="client_id numeric, costelement_id numeric",Extension="",
Synchronized="2017-10-04 22:22:28.0")
	public static final String Identifier = "d7a361e7-84fd-c3eb-8bec-cd9aacf0cf52";

	public static final String getCode() 
{
 	StrBuilder sb = new StrBuilder();
 	sb.appendln("DECLARE");
	sb.appendln("	_startdate timestamp;");
	sb.appendln("	_periodstart timestamp;");
	sb.appendln("	_periodend timestamp;");
	sb.appendln("	ar record;");
	sb.appendln("	test record;");
	sb.appendln("	resetproduct record;");
	sb.appendln("	resetdoc record;");
	sb.appendln("	products record;");
	sb.appendln("	dtiocost character varying;");
	sb.appendln("	dtonlycost character varying;");
	sb.appendln("	dtonlyio character varying;");
	sb.appendln("	costtables character varying[];");
	sb.appendln("	seqnoorder character varying;");
	sb.appendln("	costdates character varying[];	");
	sb.appendln("	docbasetype character varying[];");
	sb.appendln("	sqltext character varying;");
	sb.appendln("	_child character varying;");
	sb.appendln("	_count numeric;");
	sb.appendln("	_period_id_end numeric;");
	sb.appendln("	_existinarray boolean;");
	sb.appendln("	_productreset numeric[];");
	sb.appendln("	_productcost numeric[];");
	sb.appendln("	_productrecost numeric[];");
	sb.appendln("	_recoststatus numeric[];");
	sb.appendln("	_resultcost  numeric;");
	sb.appendln("	_productid numeric;");
	sb.appendln("	_c_current_period_id numeric;");
	sb.appendln("	_inventoryid numeric;");
	sb.appendln("BEGIN");
	sb.appendln("	-- Configure");
	sb.appendln("	SELECT m_inventory_id,");
	sb.appendln("	       string_to_array(properties->'dates',','),");
	sb.appendln("	       properties->'dtiocost',properties->'dtonlycost', properties->'dtonlyio',");
	sb.appendln("	       string_to_array(properties->'tables',','), properties->'seqno',");
	sb.appendln("	       loadperiod_id,");
	sb.appendln("	       startdate into ");
	sb.appendln("	       _inventoryid,");
	sb.appendln("	       costdates, ");
	sb.appendln("	       dtiocost, dtonlycost, dtonlyio,");
	sb.appendln("	       costtables,seqnoorder,");
	sb.appendln("	       _c_current_period_id,");
	sb.appendln("	       _startdate");
	sb.appendln("	FROM m_materialpolicy where ad_client_id = Client_ID;");
	sb.appendln("	if _c_current_period_id ISNULL THEN");
	sb.appendln("	  IF NOT _inventoryid ISNULL THEN");
	sb.appendln("	     SELECT movementdate into _periodstart FROM M_INVENTORY where m_inventory_id = _inventoryid;		  ");
	sb.appendln("	  end if;");
	sb.appendln("	  if _periodstart isnull then");
	sb.appendln("	     SELECT startdate into _periodstart ");
	sb.appendln("	     from c_period where date(_startdate) BETWEEN startdate AND enddate AND AD_Client_ID = Client_ID;");
	sb.appendln("	  END IF;	");
	sb.appendln("	  --select c_period_id into _c_current_period_id from c_period where startdate >= _periodstart and _periodstart < enddate;");
	sb.appendln("	  select c_period_id  into _c_current_period_id from c_period where _periodstart between startdate and enddate;");
	sb.appendln("	else");
	sb.appendln("	  select c_period_id into _period_id_end from c_period where date(now()) BETWEEN startdate AND enddate AND AD_Client_ID = Client_ID;		  ");
	sb.appendln("	  IF _c_current_period_id < _period_id_end THEN ");
	sb.appendln("	     SELECT c_period_id into _c_current_period_id from c_period where ");
	sb.appendln("	     	startdate = (select enddate+1 from c_period where c_period_id = (select loadperiod_id FROM m_materialpolicy where ad_client_id = Client_ID))");
	sb.appendln("	     	AND ad_client_id = Client_ID;");
	sb.appendln("	  END IF;");
	sb.appendln("	END IF;");
	sb.appendln("	docbasetype = string_to_array(concat(dtiocost,");
	sb.appendln("	CASE WHEN length(dtonlycost) > 0 AND left(dtonlycost,1) != ',' then ',' else '' END,");
	sb.appendln("	dtonlycost,");
	sb.appendln("	CASE WHEN length(dtonlyio) > 0 AND left(dtonlyio,1) != ',' then ',' else '' END,");
	sb.appendln("	dtonlyio),',');");
	sb.appendln("	raise notice 'docbasetype %',docbasetype;");
	sb.appendln("	raise notice 'period start %', _periodstart;");
	sb.appendln("	select enddate into _periodend from c_period where c_period_id = _c_current_period_id;");
	sb.appendln("	for ar in select c_period_id from c_period where c_period_id = _c_current_period_id");
	sb.appendln("	LOOP");
	sb.appendln("           raise notice 'period %', ar.c_period_id;");
	sb.appendln("	   for i in array_lower(costtables,1)..array_upper(costtables,1)");
	sb.appendln("	   LOOP");
	sb.appendln("		--if not firstrun then");
	sb.appendln("		EXECUTE format('select tablename from ad_table where ad_table_id in (SELECT AD_Table_ID from ad_column where Columnname = ''%s'' AND isparent=''Y'')',costtables[i] || '_ID') into _child;");
	sb.appendln("		--");
	sb.appendln("		sqltext := 'SELECT COUNT(*) FROM ';");
	sb.appendln("		sqltext := sqltext || _child || ' zzchild';");
	sb.appendln("		sqltext := sqltext || ' JOIN '||costtables[i] || ' zz  on zz.'||costtables[i]||'_ID=zzchild.'||costtables[i]||'_ID ';");
	sb.appendln("		sqltext := sqltext || ' LEFT JOIN M_Transaction t ON zzchild.'||_child||'_ID = t.'||_child||'_ID ';");
	sb.appendln("		sqltext := sqltext || ' JOIN C_PERIOD p on zz.'|| costdates[i] ||'::date BETWEEN p.startdate AND p.enddate AND p.c_period_id = '|| ar.c_period_id; ");
	sb.appendln("		sqltext := sqltext || ' JOIN C_DocType dt on zz.c_doctype_id = dt.c_doctype_id AND docbasetype in ('''||array_to_string(docbasetype,''',''')||''')';");
	sb.appendln("		sqltext := sqltext || ' AND zz.AD_Client_ID='||Client_ID||' AND zz.Processed=''Y''';");
	sb.appendln("		sqltext := sqltext || ' AND t.'||_child||'_ID ISNULL';");
	sb.appendln("		sqltext := sqltext || ' AND zz.DocStatus in (''CO'',''CL'') AND zz.IsActive=''Y''';");
	sb.appendln("		execute format(sqltext) into _count;");
	sb.appendln("		if _count > 0 then ");
	sb.appendln("			sqltext := 'SELECT distinct zz.'||costtables[i]||'_ID FROM ';");
	sb.appendln("			sqltext := sqltext || _child || ' zzchild';");
	sb.appendln("			sqltext := sqltext || ' JOIN '||costtables[i] || ' zz  on zz.'||costtables[i]||'_ID=zzchild.'||costtables[i]||'_ID ';");
	sb.appendln("			sqltext := sqltext || ' LEFT JOIN M_Transaction t ON zzchild.'||_child||'_ID = t.'||_child||'_ID ';");
	sb.appendln("			sqltext := sqltext || ' JOIN C_PERIOD p on zz.'|| costdates[i] ||'::date BETWEEN p.startdate AND p.enddate AND p.c_period_id = '|| ar.c_period_id; ");
	sb.appendln("			sqltext := sqltext || ' JOIN C_DocType dt on zz.c_doctype_id = dt.c_doctype_id AND docbasetype in ('''||array_to_string(docbasetype,''',''')||''')';");
	sb.appendln("			sqltext := sqltext || ' AND zz.AD_Client_ID='||Client_ID||' AND zz.Processed=''Y''';");
	sb.appendln("			sqltext := sqltext || ' AND t.'||_child||'_ID ISNULL';");
	sb.appendln("			sqltext := sqltext || ' AND zz.DocStatus in (''CO'',''CL'') AND zz.IsActive=''Y''';			");
	sb.appendln("			for resetdoc in execute format(sqltext)");
	sb.appendln("			loop");
	sb.appendln("			   if costtables[i] = 'M_InOut' then 	");
	sb.appendln("				perform loaddocumentinout(resetdoc.m_inout_id, ar.c_period_id);	");
	sb.appendln("				--for resetproduct in select distinct m_product_id from m_inoutline where m_inout_id = resetdoc.m_inout_id					");
	sb.appendln("				--LOOP");
	sb.appendln("				--	SELECT case when resetproduct.m_product_id = ANY(_productreset) then true else false end into _existinarray;   		");
	sb.appendln("				--	IF NOT _existinarray THEN																	  ");
	sb.appendln("				--	  perform resetcostproduct(ar.c_period_id,_idperiodend,Client_ID, resetproduct.m_product_id);");
	sb.appendln("				--	  _productreset := array_append(_productreset,resetproduct.m_product_id);");
	sb.appendln("				--	END IF;				   ");
	sb.appendln("				--END LOOP;					");
	sb.appendln("				sqltext := 'update '||costtables[i]||' set iscosted = ''N'' where '||costtables[i]||'_ID = '||resetdoc.m_inout_id;				   ");
	sb.appendln("				execute format(sqltext);");
	sb.appendln("			   ELSIF costtables[i] = 'M_Inventory' then");
	sb.appendln("				raise notice 'inventory % period %',resetdoc.m_inventory_id, ar.c_period_id;");
	sb.appendln("				perform loaddocumentinventory(resetdoc.m_inventory_id, ar.c_period_id);");
	sb.appendln("				--FOR resetproduct in select distinct m_product_id from m_inventoryline where m_inventory_id = resetdoc.m_inventory_id");
	sb.appendln("				--LOOP");
	sb.appendln("				--	SELECT case when resetproduct.m_product_id = ANY(_productreset) then true else false end into _existinarray;   		");
	sb.appendln("				--	IF NOT _existinarray THEN																	  ");
	sb.appendln("				--	  perform resetcostproduct(ar.c_period_id,_idperiodend,Client_ID, resetproduct.m_product_id);");
	sb.appendln("				--	  _productreset := array_append(_productreset,resetproduct.m_product_id);");
	sb.appendln("				--	END IF;				   						");
	sb.appendln("				--END LOOP;");
	sb.appendln("				sqltext := 'update '||costtables[i]||' set iscosted = ''N'' where '||costtables[i]||'_ID = '||resetdoc.m_inventory_id;				   ");
	sb.appendln("				execute format(sqltext);					   								  						  ");
	sb.appendln("			   ELSIF costtables[i] = 'M_Production' then");
	sb.appendln("				perform loaddocumentproduction(resetdoc.m_production_id, ar.c_period_id);");
	sb.appendln("				--FOR resetproduct in select distinct pl.m_product_id from m_production p");
	sb.appendln("				--	JOIN m_productionplan pla ON pla.m_production_id = p.m_production_id");
	sb.appendln("				--	JOIN m_productionline pl ON pla.m_productionplan_id = pl.m_productionplan_id ");
	sb.appendln("				--where p.m_production_id = resetdoc.m_production_id");
	sb.appendln("				--LOOP");
	sb.appendln("				--	SELECT case when resetproduct.m_product_id = ANY(_productreset) then true else false end into _existinarray;   		");
	sb.appendln("				--	IF NOT _existinarray THEN																	  ");
	sb.appendln("				--	  perform resetcostproduct(ar.c_period_id,_idperiodend,Client_ID, resetproduct.m_product_id);");
	sb.appendln("				--	  _productreset := array_append(_productreset,resetproduct.m_product_id);");
	sb.appendln("				--	END IF;				   ");
	sb.appendln("				--END LOOP;				   					");
	sb.appendln("				sqltext := 'update '||costtables[i]||' set iscosted = ''N'' where '||costtables[i]||'_ID = '||resetdoc.m_production_id;");
	sb.appendln("				execute format(sqltext);					");
	sb.appendln("			   ELSIF costtables[i] = 'C_Invoice' then");
	sb.appendln("				perform loaddocumentinvoice(resetdoc.c_invoice_id, ar.c_period_id);");
	sb.appendln("				--FOR resetproduct in select distinct m_product_id from c_invoiceline where c_invoice_id = resetdoc.c_invoice_id");
	sb.appendln("				--LOOP");
	sb.appendln("				--	SELECT case when resetproduct.m_product_id = ANY(_productreset) then true else false end into _existinarray;   		");
	sb.appendln("				--	IF NOT _existinarray THEN																	  ");
	sb.appendln("				--	  perform resetcostproduct(ar.c_period_id,_idperiodend,Client_ID, resetproduct.m_product_id);");
	sb.appendln("				--	  _productreset := array_append(_productreset,resetproduct.m_product_id);");
	sb.appendln("				--	END IF;				   						");
	sb.appendln("				--END LOOP;				   ");
	sb.appendln("				sqltext := 'update '||costtables[i]||' set iscosted = ''N'' where '||costtables[i]||'_ID = '||resetdoc.c_invoice_id;");
	sb.appendln("				execute format(sqltext);");
	sb.appendln("			   ELSIF costtables[i] = 'M_Movement' then");
	sb.appendln("				perform loaddocumentmovement(resetdoc.m_movement_id, ar.c_period_id);");
	sb.appendln("				--FOR resetproduct in select distinct m_product_id from m_movementline where m_movement_id = resetdoc.m_movement_id");
	sb.appendln("				--LOOP");
	sb.appendln("				--	SELECT case when resetproduct.m_product_id = ANY(_productreset) then true else false end into _existinarray;   		");
	sb.appendln("				--	IF NOT _existinarray THEN																	  ");
	sb.appendln("				--	  perform resetcostproduct(ar.c_period_id,_idperiodend,Client_ID, resetproduct.m_product_id);");
	sb.appendln("				--	  _productreset := array_append(_productreset,resetproduct.m_product_id);");
	sb.appendln("				--	END IF;				   ");
	sb.appendln("				--END LOOP;				   ");
	sb.appendln("				sqltext := 'update '||costtables[i]||' set iscosted = ''N'' where '||costtables[i]||'_ID = '||resetdoc.m_movement_id;");
	sb.appendln("				execute format(sqltext);");
	sb.appendln("			   end if;");
	sb.appendln("			end loop;");
	sb.appendln("		end if;");
	sb.appendln("		raise notice 'count %',_count;");
	sb.appendln("	   END LOOP;");
	sb.appendln("	END LOOP;");
	sb.appendln("	UPDATE M_MATERIALPOLICY SET loadperiod_id = _c_current_period_id WHERE AD_Client_ID = Client_ID;");
	sb.appendln("END;");
	return sb.toString();
}
	public static final String getComments() 
{
 	StrBuilder sb = new StrBuilder();
 	sb.appendln("@Synchronized=2017-10-04 22:22:28.0");
	sb.appendln("@Identifier=d7a361e7-84fd-c3eb-8bec-cd9aacf0cf52");
	return sb.toString();
}
}
