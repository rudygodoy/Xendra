package org.compiere.model.view;


import org.xendra.annotations.*;
import org.apache.commons.lang.text.StrBuilder;
import org.compiere.model.View;

public class VIEW_Alldocuments 
{
 	@XendraView(Identifier="c5fce00b-9b86-a704-c0a3-ddf03d51a7a1",
Synchronized="2020-02-12 11:34:34.0",
Name="alldocuments",
Owner="xendra",
Extension="")
	public static final String Identifier = "c5fce00b-9b86-a704-c0a3-ddf03d51a7a1";

	public static final String getComments() 
{
 	StrBuilder sb = new StrBuilder();
 	sb.appendln("@plugin=org.xendra.core");
	sb.appendln("  ");
	sb.appendln("@Synchronized=2020-02-12 11:34:34.0");
	sb.appendln("@Identifier=c5fce00b-9b86-a704-c0a3-ddf03d51a7a1");
	return sb.toString();
}
	public static final String getDefinition() 
{
 	StrBuilder sb = new StrBuilder();
 	sb.appendln("SELECT documents.created, documents.createdby, documents.updated, documents.updatedby, documents.ad_client_id, documents.c_period_id, documents.documentno, documents.m_product_id, documents.movementdate, documents.dateacct, documents.transactiontype, documents.movementtype, documents.signe, documents.line, documents.qtysource, documents.qtyinput, documents.qtyoutput, documents.master_id, documents.parent_id, documents.ad_table_id, documents.record_id, documents.m_productionplan_id, documents.linenetamt FROM ((((SELECT io.created, io.createdby, io.updated, io.updatedby, io.ad_client_id, (SELECT c_period.c_period_id FROM c_period WHERE ((((io.movementdate)::date >= c_period.startdate) AND ((io.movementdate)::date <= c_period.enddate)) AND (c_period.ad_client_id = io.ad_client_id))) AS c_period_id, il.m_product_id, io.documentno, io.movementdate, io.dateacct, dt.transactiontype, io.movementtype, \"substring\"((io.movementtype)::text, 2) AS signe, il.line, CASE WHEN (\"substring\"((io.movementtype)::text, 2) = '+'::text) THEN il.movementqty ELSE (il.movementqty * ((-1))::numeric) END AS qtysource, CASE WHEN (\"substring\"((io.movementtype)::text, 2) = '+'::text) THEN il.movementqty ELSE (0)::numeric END AS qtyinput, CASE WHEN (\"substring\"((io.movementtype)::text, 2) = '+'::text) THEN (0)::numeric ELSE il.movementqty END AS qtyoutput, (SELECT ad_table.ad_table_id FROM ad_table WHERE ((ad_table.tablename)::text = 'M_InOut'::text)) AS master_id, io.m_inout_id AS parent_id, (SELECT ad_table.ad_table_id FROM ad_table WHERE ((ad_table.tablename)::text = 'M_InOutLine'::text)) AS ad_table_id, il.m_inoutline_id AS record_id, NULL::numeric AS m_productionplan_id, getaveragecost(io.ad_client_id, mp.m_costelement_id, il.m_inoutline_id, il.m_product_id, io.movementdate) AS linenetamt FROM ((((m_inout io JOIN m_inoutline il ON ((il.m_inout_id = io.m_inout_id))) JOIN c_orderline ol ON ((il.c_orderline_id = ol.c_orderline_id))) JOIN c_doctype dt ON ((io.c_doctype_id = dt.c_doctype_id))) JOIN m_materialpolicy mp ON ((mp.ad_client_id = io.ad_client_id))) WHERE ((io.isactive = 'Y'::bpchar) AND (io.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar, 'RE'::bpchar]))) UNION ALL SELECT m.created, m.createdby, m.updated, m.updatedby, m.ad_client_id, (SELECT c_period.c_period_id FROM c_period WHERE ((((m.movementdate)::date >= c_period.startdate) AND ((m.movementdate)::date <= c_period.enddate)) AND (c_period.ad_client_id = m.ad_client_id))) AS c_period_id, ml.m_product_id, m.documentno, m.movementdate, m.dateacct, dt.transactiontype, 'M+'::bpchar AS movementtype, '+'::text AS signe, ml.line, ml.movementqty AS qtysource, ml.movementqty AS qtyinput, 0 AS qtyoutput, (SELECT ad_table.ad_table_id FROM ad_table WHERE ((ad_table.tablename)::text = 'M_Movement'::text)) AS master_id, m.m_movement_id AS parent_id, (SELECT ad_table.ad_table_id FROM ad_table WHERE ((ad_table.tablename)::text = 'M_MovementLine'::text)) AS ad_table_id, ml.m_movementline_id AS record_id, NULL::numeric AS m_productionplan_id, 0 AS linenetamt FROM ((m_movement m JOIN m_movementline ml ON ((ml.m_movement_id = m.m_movement_id))) JOIN c_doctype dt ON ((m.c_doctype_id = dt.c_doctype_id))) WHERE ((m.isactive = 'Y'::bpchar) AND (m.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar, 'RE'::bpchar])))) UNION ALL SELECT m.created, m.createdby, m.updated, m.updatedby, m.ad_client_id, (SELECT c_period.c_period_id FROM c_period WHERE ((((m.movementdate)::date >= c_period.startdate) AND ((m.movementdate)::date <= c_period.enddate)) AND (c_period.ad_client_id = m.ad_client_id))) AS c_period_id, ml.m_product_id, m.documentno, m.movementdate, m.dateacct, dt.transactiontype, 'M-'::bpchar AS movementtype, '-'::text AS signe, ml.line, (((-1))::numeric * ml.movementqty) AS qtysource, 0 AS qtyinput, ml.movementqty AS qtyoutput, (SELECT ad_table.ad_table_id FROM ad_table WHERE ((ad_table.tablename)::text = 'M_Movement'::text)) AS master_id, m.m_movement_id AS parent_id, (SELECT ad_table.ad_table_id FROM ad_table WHERE ((ad_table.tablename)::text = 'M_MovementLine'::text)) AS ad_table_id, ml.m_movementline_id AS record_id, NULL::numeric AS m_productionplan_id, 0 AS linenetamt FROM ((m_movement m JOIN m_movementline ml ON ((ml.m_movement_id = m.m_movement_id))) JOIN c_doctype dt ON ((m.c_doctype_id = dt.c_doctype_id))) WHERE ((m.isactive = 'Y'::bpchar) AND (m.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar, 'RE'::bpchar])))) UNION ALL SELECT i.created, i.createdby, i.updated, i.updatedby, i.ad_client_id, (SELECT c_period.c_period_id FROM c_period WHERE ((((i.movementdate)::date >= c_period.startdate) AND ((i.movementdate)::date <= c_period.enddate)) AND (c_period.ad_client_id = il.ad_client_id))) AS c_period_id, il.m_product_id, i.documentno, i.movementdate, i.dateacct, dt.transactiontype, CASE WHEN (CASE WHEN ((il.inventorytype = 'D'::bpchar) OR (il.inventorytype = 'I'::bpchar)) THEN (il.qtycount - il.qtybook) ELSE il.qtyinternaluse END >= (0)::numeric) THEN 'I+'::text ELSE 'I-'::text END AS movementtype, CASE WHEN (CASE WHEN ((il.inventorytype = 'D'::bpchar) OR (il.inventorytype = 'I'::bpchar)) THEN (il.qtycount - il.qtybook) ELSE il.qtyinternaluse END >= (0)::numeric) THEN '+'::text ELSE '-'::text END AS signe, il.line, CASE WHEN ((il.inventorytype = 'D'::bpchar) OR (il.inventorytype = 'I'::bpchar)) THEN (il.qtycount - il.qtybook) ELSE il.qtyinternaluse END AS qtysource, CASE WHEN ((il.inventorytype = 'D'::bpchar) OR (il.inventorytype = 'I'::bpchar)) THEN CASE WHEN ((il.qtycount - il.qtybook) > (0)::numeric) THEN (il.qtycount - il.qtybook) WHEN (il.qtyinternaluse > (0)::numeric) THEN il.qtyinternaluse ELSE NULL::numeric END ELSE (0)::numeric END AS qtyinput, CASE WHEN ((il.inventorytype = 'D'::bpchar) OR (il.inventorytype = 'I'::bpchar)) THEN CASE WHEN ((il.qtycount - il.qtybook) < (0)::numeric) THEN abs((il.qtycount - il.qtybook)) WHEN (il.qtyinternaluse < (0)::numeric) THEN abs(il.qtyinternaluse) ELSE NULL::numeric END ELSE (0)::numeric END AS qtyoutput, (SELECT ad_table.ad_table_id FROM ad_table WHERE ((ad_table.tablename)::text = 'M_Inventory'::text)) AS master_id, i.m_inventory_id AS parent_id, (SELECT ad_table.ad_table_id FROM ad_table WHERE ((ad_table.tablename)::text = 'M_InventoryLine'::text)) AS ad_table_id, il.m_inventoryline_id AS record_id, NULL::numeric AS m_productionplan_id, 0 AS linenetamt FROM ((m_inventory i JOIN m_inventoryline il ON ((il.m_inventory_id = i.m_inventory_id))) JOIN c_doctype dt ON ((i.c_doctype_id = dt.c_doctype_id))) WHERE ((i.isactive = 'Y'::bpchar) AND (i.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar, 'RE'::bpchar])))) UNION ALL SELECT p.created, p.createdby, p.updated, p.updatedby, p.ad_client_id, (SELECT c_period.c_period_id FROM c_period WHERE ((((p.movementdate)::date >= c_period.startdate) AND ((p.movementdate)::date <= c_period.enddate)) AND (c_period.ad_client_id = pl.ad_client_id))) AS c_period_id, pl.m_product_id, p.documentno, p.movementdate, p.dateacct, dt.transactiontype, CASE WHEN (pl.movementqty >= (0)::numeric) THEN 'P+'::text ELSE 'P-'::text END AS movementtype, CASE WHEN (pl.movementqty >= (0)::numeric) THEN '+'::text ELSE '-'::text END AS signe, pl.line, pl.movementqty AS qtysource, CASE WHEN (pl.movementqty > (0)::numeric) THEN pl.movementqty ELSE (0)::numeric END AS qtyinput, CASE WHEN (pl.movementqty < (0)::numeric) THEN pl.movementqty ELSE (0)::numeric END AS qtyoutput, (SELECT ad_table.ad_table_id FROM ad_table WHERE ((ad_table.tablename)::text = 'M_Production'::text)) AS master_id, p.m_production_id AS parent_id, (SELECT ad_table.ad_table_id FROM ad_table WHERE ((ad_table.tablename)::text = 'M_ProductionLine'::text)) AS ad_table_id, pl.m_productionline_id AS record_id, pla.m_productionplan_id, 0 AS linenetamt FROM (((m_production p JOIN m_productionplan pla ON ((pla.m_production_id = p.m_production_id))) JOIN m_productionline pl ON ((pla.m_productionplan_id = pl.m_productionplan_id))) JOIN c_doctype dt ON ((p.c_doctype_id = dt.c_doctype_id))) WHERE ((p.isactive = 'Y'::bpchar) AND (p.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar, 'RE'::bpchar])))) documents;");
	return sb.toString();
}
}
