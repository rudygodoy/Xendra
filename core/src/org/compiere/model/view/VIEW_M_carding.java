package org.compiere.model.view;


import org.xendra.annotations.*;
import org.apache.commons.lang.text.StrBuilder;
import org.compiere.model.View;

public class VIEW_M_carding 
{
 	@XendraView(Identifier="6d956e01-058a-741f-7113-0c8dd70ad718",
Synchronized="2017-04-14 10:35:34.0",
Name="m_carding",
Owner="xendra",
Extension="")
	public static final String Identifier = "6d956e01-058a-741f-7113-0c8dd70ad718";

	public static final String getComments() 
{
 	StrBuilder sb = new StrBuilder();
 	sb.appendln("@Synchronized=2017-04-14 10:35:34.0");
	sb.appendln("@Identifier=6d956e01-058a-741f-7113-0c8dd70ad718");
	return sb.toString();
}
	public static final String getDefinition() 
{
 	StrBuilder sb = new StrBuilder();
 	sb.appendln("(((SELECT (SELECT c_period.c_period_id FROM c_period WHERE ((((io.movementdate)::date >= c_period.startdate) AND ((io.movementdate)::date <= c_period.enddate)) AND (c_period.ad_client_id = io.ad_client_id))) AS c_period_id, io.c_bpartner_id, io.ad_client_id, io.ad_org_id, il.m_product_id, il.m_attributesetinstance_id, io.movementdate, io.dateacct, io.c_doctype_id, io.documentno, io.c_order_id, (SELECT max(invl.c_invoice_id) AS max FROM c_invoiceline invl WHERE (il.m_inoutline_id = invl.m_inoutline_id)) AS c_invoice_id, il.m_locator_id, io.m_warehouse_id, (getcardinginoutdata(io.ad_client_id, io.ad_org_id, il.c_orderline_id, io.movementdate, (io.movementtype)::text)).p_currency_id AS c_currency_id, (getcardinginoutdata(io.ad_client_id, io.ad_org_id, il.c_orderline_id, io.movementdate, (io.movementtype)::text)).priceactual AS priceactual, (getcardinginoutdata(io.ad_client_id, io.ad_org_id, il.c_orderline_id, io.movementdate, (io.movementtype)::text)).costdate AS costdate, (getcardinginoutdata(io.ad_client_id, io.ad_org_id, il.c_orderline_id, io.movementdate, (io.movementtype)::text)).mov_isreturn AS mov_isreturn, CASE WHEN (\"substring\"((io.movementtype)::text, 2) = '+'::text) THEN il.movementqty ELSE (il.movementqty * ((-1))::numeric) END AS qtysource, CASE WHEN (\"substring\"((io.movementtype)::text, 2) = '+'::text) THEN il.movementqty ELSE (0)::numeric END AS qtyinput, CASE WHEN (\"substring\"((io.movementtype)::text, 2) = '+'::text) THEN (0)::numeric ELSE il.movementqty END AS qtyoutput, (SELECT ad_table.ad_table_id FROM ad_table WHERE ((ad_table.tablename)::text = 'M_InOut'::text)) AS master_id, io.m_inout_id AS parent_id, (SELECT ad_table.ad_table_id FROM ad_table WHERE ((ad_table.tablename)::text = 'M_InOutLine'::text)) AS ad_table_id, il.m_inoutline_id AS record_id, io.movementtype, \"substring\"((io.movementtype)::text, 2) AS signe, io.created, io.createdby, io.updated, io.updatedby, il.iscosted, NULL::numeric AS m_productionplan_id FROM (m_inout io JOIN m_inoutline il ON (((il.m_inout_id = io.m_inout_id) AND (il.isactive = 'Y'::bpchar)))) WHERE (((io.isactive = 'Y'::bpchar) AND (io.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar, 'RE'::bpchar]))) AND (io.movementdate >= (SELECT c_acctschema.costedfrom FROM c_acctschema WHERE (c_acctschema.ad_client_id = io.ad_client_id)))) UNION ALL SELECT (SELECT c_period.c_period_id FROM c_period WHERE ((((mio.movementdate)::date >= c_period.startdate) AND ((mio.movementdate)::date <= c_period.enddate)) AND (c_period.ad_client_id = mio.ad_client_id))) AS c_period_id, NULL::integer AS c_bpartner_id, w.ad_client_id, w.ad_org_id, ml.m_product_id, ml.m_attributesetinstance_id, mio.movementdate, mio.dateacct, mio.c_doctype_id, mio.documentno, NULL::numeric AS c_order_id, NULL::numeric AS c_invoice_id, ml.m_locatorto_id AS m_locator_id, w.m_warehouse_id, 0 AS c_currency_id, 0 AS priceactual, mio.movementdate AS costdate, 'N'::bpchar AS mov_isreturn, ml.movementqty AS qtysource, ml.movementqty AS qtyinput, 0 AS qtyoutput, (SELECT ad_table.ad_table_id FROM ad_table WHERE ((ad_table.tablename)::text = 'M_Movement'::text)) AS master_id, mio.m_movement_id AS parent_id, (SELECT ad_table.ad_table_id FROM ad_table WHERE ((ad_table.tablename)::text = 'M_MovementLine'::text)) AS ad_table_id, ml.m_movementline_id AS record_id, 'M+'::bpchar AS movementtype, '+'::text AS signe, mio.created, mio.createdby, mio.updated, mio.updatedby, ml.iscosted, NULL::numeric AS m_productionplan_id FROM ((m_movement mio JOIN m_movementline ml ON (((ml.m_movement_id = mio.m_movement_id) AND (ml.isactive = 'Y'::bpchar)))) JOIN m_warehouse w ON ((w.m_warehouse_id = (SELECT loc.m_warehouse_id FROM m_locator loc WHERE (loc.m_locator_id = ml.m_locatorto_id))))) WHERE (((mio.isactive = 'Y'::bpchar) AND (mio.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar, 'RE'::bpchar]))) AND (mio.movementdate >= (SELECT c_acctschema.costedfrom FROM c_acctschema WHERE (c_acctschema.ad_client_id = mio.ad_client_id))))) UNION ALL SELECT (SELECT c_period.c_period_id FROM c_period WHERE ((((mio.movementdate)::date >= c_period.startdate) AND ((mio.movementdate)::date <= c_period.enddate)) AND (c_period.ad_client_id = mio.ad_client_id))) AS c_period_id, NULL::integer AS c_bpartner_id, w.ad_client_id, w.ad_org_id, ml.m_product_id, ml.m_attributesetinstance_id, mio.movementdate, mio.dateacct, mio.c_doctype_id, mio.documentno, NULL::numeric AS c_order_id, NULL::numeric AS c_invoice_id, ml.m_locator_id, w.m_warehouse_id, 0 AS c_currency_id, 0 AS priceactual, mio.movementdate AS costdate, 'N'::bpchar AS mov_isreturn, (((-1))::numeric * ml.movementqty) AS qtysource, 0 AS qtyinput, ml.movementqty AS qtyoutput, (SELECT ad_table.ad_table_id FROM ad_table WHERE ((ad_table.tablename)::text = 'M_Movement'::text)) AS master_id, mio.m_movement_id AS parent_id, (SELECT ad_table.ad_table_id FROM ad_table WHERE ((ad_table.tablename)::text = 'M_MovementLine'::text)) AS ad_table_id, ml.m_movementline_id AS record_id, 'M-'::bpchar AS movementtype, '-'::text AS signe, mio.created, mio.createdby, mio.updated, mio.updatedby, ml.iscosted, NULL::numeric AS m_productionplan_id FROM ((m_movement mio JOIN m_movementline ml ON (((ml.m_movement_id = mio.m_movement_id) AND (ml.isactive = 'Y'::bpchar)))) JOIN m_warehouse w ON ((w.m_warehouse_id = (SELECT loc.m_warehouse_id FROM m_locator loc WHERE (loc.m_locator_id = ml.m_locator_id))))) WHERE (((mio.isactive = 'Y'::bpchar) AND (mio.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar, 'RE'::bpchar]))) AND (mio.movementdate >= (SELECT c_acctschema.costedfrom FROM c_acctschema WHERE (c_acctschema.ad_client_id = mio.ad_client_id))))) UNION ALL SELECT (SELECT c_period.c_period_id FROM c_period WHERE ((((i.movementdate)::date >= c_period.startdate) AND ((i.movementdate)::date <= c_period.enddate)) AND (c_period.ad_client_id = i.ad_client_id))) AS c_period_id, NULL::integer AS c_bpartner_id, i.ad_client_id, i.ad_org_id, il.m_product_id, il.m_attributesetinstance_id, i.movementdate, i.dateacct, i.c_doctype_id, i.documentno, NULL::numeric AS c_order_id, NULL::numeric AS c_invoice_id, il.m_locator_id, i.m_warehouse_id, 0 AS c_currency_id, 0 AS priceactual, i.movementdate AS costdate, 'N'::bpchar AS mov_isreturn, CASE WHEN ((il.inventorytype = 'D'::bpchar) OR (il.inventorytype = 'I'::bpchar)) THEN (il.qtycount - il.qtybook) ELSE il.qtyinternaluse END AS qtysource, CASE WHEN ((il.inventorytype = 'D'::bpchar) OR (il.inventorytype = 'I'::bpchar)) THEN CASE WHEN ((il.qtycount - il.qtybook) > (0)::numeric) THEN (il.qtycount - il.qtybook) ELSE (0)::numeric END ELSE CASE WHEN (il.qtyinternaluse > (0)::numeric) THEN il.qtyinternaluse ELSE (0)::numeric END END AS qtyinput, CASE WHEN ((il.inventorytype = 'D'::bpchar) OR (il.inventorytype = 'I'::bpchar)) THEN CASE WHEN ((il.qtycount - il.qtybook) < (0)::numeric) THEN abs((il.qtycount - il.qtybook)) ELSE (0)::numeric END ELSE CASE WHEN (il.qtyinternaluse < (0)::numeric) THEN abs(il.qtyinternaluse) ELSE (0)::numeric END END AS qtyoutput, (SELECT ad_table.ad_table_id FROM ad_table WHERE ((ad_table.tablename)::text = 'M_Inventory'::text)) AS master_id, i.m_inventory_id AS parent_id, (SELECT ad_table.ad_table_id FROM ad_table WHERE ((ad_table.tablename)::text = 'M_InventoryLine'::text)) AS ad_table_id, il.m_inventoryline_id AS record_id, CASE WHEN (CASE WHEN ((il.inventorytype = 'D'::bpchar) OR (il.inventorytype = 'I'::bpchar)) THEN (il.qtycount - il.qtybook) ELSE il.qtyinternaluse END >= (0)::numeric) THEN 'I+'::text ELSE 'I-'::text END AS movementtype, CASE WHEN (CASE WHEN ((il.inventorytype = 'D'::bpchar) OR (il.inventorytype = 'I'::bpchar)) THEN (il.qtycount - il.qtybook) ELSE il.qtyinternaluse END >= (0)::numeric) THEN '+'::text ELSE '-'::text END AS signe, i.created, i.createdby, i.updated, i.updatedby, il.iscosted, NULL::numeric AS m_productionplan_id FROM (m_inventory i JOIN m_inventoryline il ON ((((il.m_inventory_id = i.m_inventory_id) AND (i.isactive = 'Y'::bpchar)) AND (i.docstatus <> 'DR'::bpchar)))) WHERE (((i.isactive = 'Y'::bpchar) AND (i.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar, 'RE'::bpchar]))) AND (i.movementdate >= (SELECT c_acctschema.costedfrom FROM c_acctschema WHERE (c_acctschema.ad_client_id = i.ad_client_id))))) UNION ALL SELECT (SELECT c_period.c_period_id FROM c_period WHERE ((((p.movementdate)::date >= c_period.startdate) AND ((p.movementdate)::date <= c_period.enddate)) AND (c_period.ad_client_id = p.ad_client_id))) AS c_period_id, NULL::integer AS c_bpartner_id, p.ad_client_id, p.ad_org_id, pl.m_product_id, pl.m_attributesetinstance_id, p.movementdate, p.dateacct, p.c_doctype_id, p.documentno, NULL::numeric AS c_order_id, NULL::numeric AS c_invoice_id, pl.m_locator_id, w.m_warehouse_id, 0 AS c_currency_id, 0 AS priceactual, p.movementdate AS costdate, 'N'::bpchar AS mov_isreturn, pl.movementqty AS qtysource, CASE WHEN (pl.movementqty > (0)::numeric) THEN pl.movementqty ELSE (0)::numeric END AS qtyinput, CASE WHEN (pl.movementqty < (0)::numeric) THEN pl.movementqty ELSE (0)::numeric END AS qtyoutput, (SELECT ad_table.ad_table_id FROM ad_table WHERE ((ad_table.tablename)::text = 'M_Production'::text)) AS master_id, p.m_production_id AS parent_id, (SELECT ad_table.ad_table_id FROM ad_table WHERE ((ad_table.tablename)::text = 'M_ProductionLine'::text)) AS ad_table_id, pl.m_productionline_id AS record_id, CASE WHEN (pl.movementqty >= (0)::numeric) THEN 'P+'::text ELSE 'P-'::text END AS movementtype, CASE WHEN (pl.movementqty >= (0)::numeric) THEN '+'::text ELSE '-'::text END AS signe, pl.created, pl.createdby, pl.updated, pl.updatedby, pl.iscosted, pla.m_productionplan_id FROM (((m_production p JOIN m_productionplan pla ON ((pla.m_production_id = p.m_production_id))) JOIN m_productionline pl ON (((pla.m_productionplan_id = pl.m_productionplan_id) AND (pl.isactive = 'Y'::bpchar)))) JOIN m_warehouse w ON ((((w.m_warehouse_id = (SELECT loc.m_warehouse_id FROM m_locator loc WHERE (loc.m_locator_id = pl.m_locator_id))) AND (p.docstatus = ANY (ARRAY['CO'::bpchar, 'CL'::bpchar, 'RE'::bpchar]))) AND (p.movementdate >= (SELECT c_acctschema.costedfrom FROM c_acctschema WHERE (c_acctschema.ad_client_id = p.ad_client_id)))))) ORDER BY 6, 25 DESC, 24 DESC;");
	return sb.toString();
}
}
