<?xml version="1.0" encoding="UTF-8"?>

<!-- ============================================= -->
<!-- Facturacion Electronica                       -->
<!-- ============================================= -->
<!-- $Header: /svn/Xendra/client/build.xml,v 1.2 2011/11/11 21:57:27 xapiens Exp $ -->

<project name="efact" default="catalog" basedir=".">

  <description>
    This buildfile is used to build the efact plugin subproject within the Xendra project.
  </description>

  <!-- set global properties for this build -->
  <property name="src" value="src"/>
  <property name="build.dir" value="build"/>
  <property name="dist.dir" value="../lib"/>
  <property name="plugin_id" value="org.xendra.efact"/>
  <property name="jar.path" value="../lib"/>
  <property name="jar.name" value="efact"/>
  <!--<property environment="env"/>-->
  <import file="../utils_dev/properties.xml"/>

  <!-- set path to include the necessary jar files for javac -->
  <path id="project.class.path">
    <pathelement path="${classpath}"/>    
    <pathelement path="lib/ftpserver-core-1.2.0.jar"/>
    <pathelement path="lib/ftplet-api-1.2.0.jar"/>
    <pathelement path="lib/httpmime-4.3.1.jar"/>
    <pathelement path="lib/jackson-core-2.8.9.jar"/>
    <pathelement path="lib/jackson-databind-2.8.9.jar"/>
    <pathelement path="lib/webservices-rt-2.4.4.jar"/>
    <pathelement path="lib/simple-email-1.0.0.jar"/>
    <pathelement path="lib/javase-3.3.0.jar"/>
    <pathelement path="${jar.path}/security.jar"/>
    <pathelement path="${jar.path}/core.jar"/>
    <pathelement path="${jar.path}/Xendralib.jar"/>
  </path>

  <patternset id="manifest.exclude">
	  <exclude name="META-INF/*.DSA"/>
	  <exclude name="META-INF/*.RSA"/>
	  <exclude name="META-INF/*.SF"/>
	  <exclude name="META-INF/MANIFEST.MF"/>
	  <exclude name="META-INF/INDEX.LIST"/>
  </patternset>

  <target name="clientInit" depends="clean" description="initialization target">
    <echo message="=========== Build efact"/>
    <!-- create the time stamp -->
    <tstamp> 
	<format property="timestamp" pattern="yyyy-MM-dd HH:mm:ss" />	 
    </tstamp>	
    <!-- create the build directory structure used by compile -->
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${plugin_id}"/>
    <!-- check for the distribution directory -->
    <available file="${dist.dir}" type="dir" property="dist.dir.exists"/>
  </target>
	
  <target name="clientMakedir" depends="clientInit" unless="dist.dir.exists">
    <!-- create the distribution directory if not available -->
    <mkdir dir="${dist.dir}"/>
  </target>
  

  <!-- =========================================== -->
  <!-- Compile                                     -->
  <!-- =========================================== -->
  <target name="clientCompile" depends="clientMakedir">
    <!-- compile the java code from ${src} into ${build.dir} -->
    <javac srcdir="${src}" destdir="${build.dir}" deprecation="off" debug="on">
      <classpath refid="project.class.path"/>
    </javac>
    <!-- copy all image & sound files from src to the build directory -->
    <copy todir="${build.dir}">
      <fileset dir="${src}">
        <include name="**/images/*"/>
        <include name="**/*.gif"/>
        <include name="**/*.jpg"/>
        <include name="**/*.png"/>
        <include name="**/*.wav"/>
        <include name="**/*.htm"/>
	<include name="**/*.txt"/>
        <include name="**/*.xml"/>
        <include name="**/*.html"/>
        <include name="**/*.properties"/>
        <exclude name="**/package.html"/>      	
      </fileset>
    </copy>
  </target>


  <!-- =========================================== -->
  <!-- Distribution                                -->
  <!-- =========================================== -->
  <target name="clientDistribute" depends="clientCompile" unless="jar.uptodate">
      <jar jarfile="${plugin_id}/${jar.name}.jar" basedir="${build.dir}" duplicate="preserve" index="yes">
	<zipfileset src="lib/ftplet-api-1.2.0.jar">
	 <patternset refid="manifest.exclude"/>
        </zipfileset>
        <zipfileset src="lib/ftpserver-core-1.2.0.jar">
	 <patternset refid="manifest.exclude"/>
        </zipfileset>
        <zipfileset src="lib/httpmime-4.3.1.jar">
	 <patternset refid="manifest.exclude"/>
        </zipfileset>
        <zipfileset src="lib/jackson-core-2.8.9.jar">
	 <patternset refid="manifest.exclude"/>
        </zipfileset>
        <zipfileset src="lib/jackson-databind-2.8.9.jar">
	 <patternset refid="manifest.exclude"/>
        </zipfileset>
        <zipfileset src="lib/javase-3.3.0.jar">
	 <patternset refid="manifest.exclude"/>
        </zipfileset>
        <zipfileset src="lib/simple-email-1.0.0.jar">
	 <patternset refid="manifest.exclude"/>
        </zipfileset>
        <zipfileset src="lib/webservices-rt-2.4.4.jar">
	 <patternset refid="manifest.exclude"/>
        </zipfileset>
        <manifest>
         <attribute name="Specification-Title" value="Xendra"/>
         <attribute name="Specification-Version" value="${env.XENDRA_VERSION}"/>
         <attribute name="Specification-Vendor" value="Xendra"/>
         <attribute name="Implementation-Title" value="Xendra ${env.XENDRA_VERSION}"/>
         <attribute name="Implementation-Version" value="${env.XENDRA_VERSION} ${DSTAMP}-${TSTAMP}"/>
         <attribute name="Implementation-Vendor" value="${env.XENDRA_VENDOR}"/> 
         <attribute name="Implementation-URL" value="http://www.xendra.org"/>
        </manifest> 
    </jar>
    <copy file="src/main/java/org/xendra/efact/plugin/plugin.xml" todir="."/>
    <replace file="./plugin.xml">
	<replacefilter token="@timestamp@" value="${timestamp}"/>
    </replace>
    <zip destfile="${dist.dir}/${jar.name}.zip">	
	<zipfileset dir="${plugin_id}" prefix="${plugin_id}">
	 	<include name="efact.jar"/>
	</zipfileset>
	<!--<zipfileset dir="src/org/xendra/pos/plugin" includes="plugin.xml" prefix="${plugin_id}"/>-->
	<zipfileset dir="." includes="plugin.xml" prefix="${plugin_id}"/>
	<zipfileset dir="resource" prefix="${plugin_id}/resource" />
	<zipfileset dir="fill" prefix="${plugin_id}/fill" />
    </zip>
  </target>
  <target name="catalog" depends="clientDistribute"> 
     <java fork="true" classname="org.xendra.developer.GenerateCatalog">
      <arg value="."/>
      <arg value="./plugin.xml"/>
      <classpath refid="project.class.path"/>
      <classpath>
	      <pathelement location="${plugin_id}/${jar.name}.jar"/>
      </classpath>
     </java>
     <delete file="./plugin.xml"/>
  </target>

  <target name="clean">
    <!-- Delete the ${build.dir} directory trees -->
    <delete dir="${build.dir}"/>
    <delete file="${dist.dir}/${jar.name}.zip" failonerror="false"/>
  </target>

</project>
